{
    "swagger": "2.0",
    "info": {
        "description": "This is a back-end server for Comvoca Admin.",
        "title": "Comvoca Admin API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "info@comvoca.com",
            "email": "info@comvoca.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/api/v1/login": {
            "post": {
                "description": "Authenticate user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "description": "Authenticate request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.AuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authenticate successful, Change Password Required, Activate OTP Required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Invalid Credentials",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/speciality": {
            "get": {
                "description": "Get Organization speciality",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Get Organization speciality",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Speciality"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/user": {
            "get": {
                "security": [
                    {
                        "BearerAuth  // Make sure this matches the defined security scheme": []
                    }
                ],
                "description": "Retrieve the organization associated with the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Get Organization by User ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.OrganizationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid User ID",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{OrganizationId}": {
            "get": {
                "description": "Get Organization by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Get Organization by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "OrganizationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.OrganizationResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organizations/{organizationId}/users": {
            "get": {
                "description": "Retrieve users associated with a specific organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Get Users by Organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organizationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.User"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Register a user related to an organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Register User Related to Organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organizationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entity.Speciality"
                        }
                    }
                }
            }
        },
        "/api/v1/orginization/:orginizationId": {
            "post": {
                "description": "Add or Update a General User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Add new User",
                "parameters": [
                    {
                        "description": "UserRequest",
                        "name": "property",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.UserResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/otp": {
            "post": {
                "description": "Activate OTP for user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Activate OTP",
                "parameters": [
                    {
                        "description": "Activate OTP request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ActivateOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User activated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/otp/resend": {
            "post": {
                "description": "Resend OTP to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend OTP",
                "parameters": [
                    {
                        "description": "Resend OTP request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ResendOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP resent successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/password": {
            "post": {
                "description": "Change user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Change password",
                "parameters": [
                    {
                        "description": "Change password request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/password/forgot": {
            "post": {
                "description": "Initiate forgot password process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Forgot password",
                "parameters": [
                    {
                        "description": "Forgot password request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ForgotPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset initiated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/password/forgot/confirm": {
            "post": {
                "description": "Confirm forgot password with confirmation code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Confirm forgot password",
                "parameters": [
                    {
                        "description": "Confirm forgot password request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ConfirmForgotPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/password/temp/confirm": {
            "post": {
                "description": "Confirm temporary password with new password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Confirm temporary password",
                "parameters": [
                    {
                        "description": "Confirm temporary password request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ConfirmTempPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "description": "Register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "Register request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "put": {
                "description": "Add or Update a User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Add new User",
                "parameters": [
                    {
                        "description": "UserRequest",
                        "name": "property",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.UserResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/role/{role}": {
            "get": {
                "description": "Get Users by role",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get Users by role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.UserResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users/{user_id}": {
            "get": {
                "description": "Get User by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.UserResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{id}": {
            "put": {
                "description": "Update all fields and relationships of an organization by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Update an organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Organization Update Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.OrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Organization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.DailySchedule": {
            "type": "object",
            "properties": {
                "dayOfWeek": {
                    "type": "integer"
                },
                "fromTime": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "toTime": {
                    "type": "string"
                }
            }
        },
        "entity.NotificationType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "Email",
                "SMS",
                "InApp"
            ]
        },
        "entity.Organization": {
            "type": "object",
            "properties": {
                "callForwardingNumber": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "daileySchedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.DailySchedule"
                    }
                },
                "deletedAt": {
                    "description": "we want find undeleted records very fast",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "insuranceCompany": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.NotificationType"
                    }
                },
                "phoneNumber": {
                    "type": "string"
                },
                "specialities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Speciality"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.User"
                    }
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "entity.Speciality": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "$ref": "#/definitions/entity.Speciality"
                },
                "parent_id": {
                    "type": "integer"
                },
                "subSpecialities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Speciality"
                    }
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "daileySchedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.DailySchedule"
                    }
                },
                "deletedAt": {
                    "description": "we want find undeleted records very fast",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "family": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "$ref": "#/definitions/entity.Organization"
                },
                "organizationID": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/entity.UserRole"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "entity.UserRole": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "Admin",
                "Staff",
                "Support"
            ]
        },
        "errors.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "types.ActivateOTPRequest": {
            "type": "object",
            "required": [
                "email",
                "otp"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                }
            }
        },
        "types.AuthRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "types.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "access_token",
                "new_password",
                "old_password"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string",
                    "minLength": 8
                },
                "old_password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "types.ConfirmForgotPasswordRequest": {
            "type": "object",
            "required": [
                "confirmation_code",
                "email",
                "new_password"
            ],
            "properties": {
                "confirmation_code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "types.ConfirmTempPasswordRequest": {
            "type": "object",
            "required": [
                "email",
                "new_password",
                "temporary_password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string",
                    "minLength": 8
                },
                "temporary_password": {
                    "type": "string"
                }
            }
        },
        "types.DailySchedule": {
            "type": "object",
            "properties": {
                "day_of_week": {
                    "type": "integer"
                },
                "from_time": {
                    "type": "string"
                },
                "to_time": {
                    "type": "string"
                }
            }
        },
        "types.ForgotPasswordRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "types.OrganizationRequest": {
            "type": "object",
            "properties": {
                "callForwadingNumber": {
                    "type": "string"
                },
                "dailySchedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.DailySchedule"
                    }
                },
                "email": {
                    "type": "string"
                },
                "insuranceCompany": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.NotificationType"
                    }
                },
                "phone_number": {
                    "type": "string"
                },
                "specialities": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "types.OrganizationResponse": {
            "type": "object",
            "properties": {
                "call_forwarding_number": {
                    "type": "string"
                },
                "daily_schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.DailySchedule"
                    }
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.NotificationType"
                    }
                },
                "phone_number": {
                    "type": "string"
                },
                "specialities": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "types.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "types.ResendOTPRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "types.UserRequest": {
            "type": "object",
            "properties": {
                "daily_schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.DailySchedule"
                    }
                },
                "email": {
                    "type": "string"
                },
                "family": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "types.UserResponse": {
            "type": "object",
            "properties": {
                "daily_schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.DailySchedule"
                    }
                },
                "email": {
                    "type": "string"
                },
                "family": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        }
    }
}